(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{126:function(e,t,a){"use strict";a.d(t,"a",(function(){return m}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=d(a),m=n,u=b["".concat(i,".").concat(m)]||b[m]||p[m]||o;return a?r.a.createElement(u,l(l({ref:t},c),{},{components:a})):r.a.createElement(u,l({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},89:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return d}));var n=a(3),r=a(7),o=(a(0),a(126)),i={sidebar_position:3},l={unversionedId:"Version 1: March 2022/data",id:"Version 1: March 2022/data",isDocsHomePage:!1,title:"Data",description:"Access",source:"@site/docs/Version 1: March 2022/data.md",sourceDirName:"Version 1: March 2022",slug:"/Version 1: March 2022/data",permalink:"/CoastTrain/docs/Version 1: March 2022/data",editUrl:"https://github.com/dbuscombe-usgs/CoastTrain/edit/master/website/docs/Version 1: March 2022/data.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Classes",permalink:"/CoastTrain/docs/Version 1: March 2022/classes"},next:{title:"Pacific Coast",permalink:"/CoastTrain/docs/Version 1: March 2022/west-coast"}},s=[{value:"Access",id:"access",children:[]},{value:"File description and contents",id:"file-description-and-contents",children:[]},{value:"Unpacking NPZ file contents",id:"unpacking-npz-file-contents",children:[]},{value:"Metadata",id:"metadata",children:[]},{value:"Citation",id:"citation",children:[]}],c={toc:s};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(o.a)("h2",{id:"access"},"Access"),Object(o.a)("p",null,"Data may be downloaded from the Coastal and Marine Geology Data Service at ",Object(o.a)("a",{parentName:"p",href:"https://cmgds.marine.usgs.gov/data-releases/datarelease/10.5066-P91NP87I/"},"this link")," (not yet live - please check back later)"),Object(o.a)("h2",{id:"file-description-and-contents"},"File description and contents"),Object(o.a)("p",null,"There are 10 data records and each record consists of a single zipped file. The zipped file contains a single csv file containing metadata for each labeled image, and a folder containing .npz format files, one per labeled image. Zipped files follow the following naming convention: {datasource}",Object(o.a)("em",{parentName:"p"},"{numberofclasses}"),"{threedigitdatasetversion}.zip, where "),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"{datasource} is the source of the original images (for example, NAIP, Landsat 8, Sentinel 2), "),Object(o.a)("li",{parentName:"ul"},"{numberofclasses} is the number of classes used to annotate the images, and "),Object(o.a)("li",{parentName:"ul"},"{threedigitdatasetversion} is the three-digit code corresponding to the dataset version (in other words, 001 is version 1). ")),Object(o.a)("p",null,"All NPZ files can be extracted using the utilities available in Doodler (Buscombe, 2022; ",Object(o.a)("a",{parentName:"p",href:"https://doi.org/10.5066/P9YVHL23"},"https://doi.org/10.5066/P9YVHL23"),") - see below for more details. An individual NPZ file is named after the image that it represents and contains the following variables"),Object(o.a)("table",null,Object(o.a)("thead",{parentName:"table"},Object(o.a)("tr",{parentName:"thead"},Object(o.a)("th",{parentName:"tr",align:null},"Variable"),Object(o.a)("th",{parentName:"tr",align:"center"},"Description"))),Object(o.a)("tbody",{parentName:"table"},Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"\u2018image\u2019"),Object(o.a)("td",{parentName:"tr",align:"center"},"Image used by the Doodler program. This is the first 3 bands of \u2018orig_image\u2019")),Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"\u2018orig_image\u2019"),Object(o.a)("td",{parentName:"tr",align:"center"},"Original 8-bit unsigned integer image read by the Doodler program, that may contain 4 bands.")),Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"\u2018label\u2019"),Object(o.a)("td",{parentName:"tr",align:"center"},"One-hot-encoded label image (2D raster) in 8-bit unsigned integer. Each integer encodes a class label, incrementing through ",Object(o.a)("inlineCode",{parentName:"td"},"classes")," starting at zero.")),Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"\u2018color_label\u2019"),Object(o.a)("td",{parentName:"tr",align:"center"},"8-bit unsigned integer 3D (RGB) version of \u2018label\u2019 colorized according to a discrete colormap")),Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"\u2018color_doodles\u2019"),Object(o.a)("td",{parentName:"tr",align:"center"},"8-bit unsigned integer 3D (RGB) raster of doodles colorized according to a discrete colormap")),Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"\u2018doodles\u2019"),Object(o.a)("td",{parentName:"tr",align:"center"},"8-bit unsigned integer 2D raster of doodles. It is possible to use Doodler utilities to reconstruct \u2018label\u2019 from \u2018doodles\u2019 and values listed in \u2018settings\u2019")),Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"\u2018settings\u2019"),Object(o.a)("td",{parentName:"tr",align:"center"},"List of settings used internally by the program, including the final values of the hyperparameters that may have been modified by the labeler")),Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"\u2018classes\u2019"),Object(o.a)("td",{parentName:"tr",align:"center"},"List of strings, each string a class name")),Object(o.a)("tr",{parentName:"tbody"},Object(o.a)("td",{parentName:"tr",align:null},"0-prefix"),Object(o.a)("td",{parentName:"tr",align:"center"},"The variables \u2018label\u2019, \u2018doodles\u2019, and \u2018color_doodles\u2019 may have one or several prefix zeros, the number of which indicate the order of the previous trial. Variables without a zero prefix are always the final versions.")))),Object(o.a)("p",null,"We provide codes to extract all images and labels and other information using utility scripts packaged with  the Doodler program. Labels are reproducible; it is possible to use Doodler to reconstruct all the labeled imagery from the original sparse annotations (or \u2018doodles\u2019) that are recorded to file. "),Object(o.a)("h2",{id:"unpacking-npz-file-contents"},"Unpacking NPZ file contents"),Object(o.a)("p",null,"The following instructions will allow you to unpack the contents of each .npz file to visualize the imagery, label imagery, and sparse annotations of ",Object(o.a)("inlineCode",{parentName:"p"},"doodles")," that made the labels, as jpeg format files viewable on your desktop."),Object(o.a)("p",null,"To do this we need the software ",Object(o.a)("a",{parentName:"p",href:"https://github.com/Doodleverse/dash_doodler"},"Doodler"),". Check out the installation guide on the ",Object(o.a)("a",{parentName:"p",href:"https://doodleverse.github.io/dash_doodler/"},"Doodler website"),"."),Object(o.a)("p",null,"In a nutshell, download the code"),Object(o.a)("pre",null,Object(o.a)("code",{parentName:"pre"},"git clone --depth 1 https://github.com/dbuscombe-usgs/dash_doodler.git\n")),Object(o.a)("p",null,"Make a conda environment"),Object(o.a)("pre",null,Object(o.a)("code",{parentName:"pre"},"conda env create --file install/dashdoodler-clean.yml\nconda activate dashdoodler\n")),Object(o.a)("pre",null,Object(o.a)("code",{parentName:"pre"},"cd utils\npython gen_images_and_labels.py\n")),Object(o.a)("p",null,"The program will prompt you to ",Object(o.a)("inlineCode",{parentName:"p"},"Select directory of results (annotations)")," which is the folder of npz files. For each npz file, it will create a jpeg file ",Object(o.a)("inlineCode",{parentName:"p"},"_label.jpg")," showing the greyscale label, an overlay ",Object(o.a)("inlineCode",{parentName:"p"},"_overlay.png")," file showing the image overlain with a color label mask, and color sparse annotations or doodles ",Object(o.a)("inlineCode",{parentName:"p"},"_doodles.png"),"."),Object(o.a)("p",null,"The images and greyscale label images can be used with ",Object(o.a)("a",{parentName:"p",href:"https://github.com/Doodleverse/segmentation_gym"},"Segmentation Gym")," to create deep-learning-based image segmentation models."),Object(o.a)("h2",{id:"metadata"},"Metadata"),Object(o.a)("p",null,"You may examine the contents of the Coast Train version 1 programmatically using a collections of python scripts and ipython notebooks hosted in ",Object(o.a)("a",{parentName:"p",href:"https://github.com/dbuscombe-usgs/CoastTrainMetaPlots"},"this github repository")),Object(o.a)("h2",{id:"citation"},"Citation"),Object(o.a)("p",null,"If you find the dataset useful please consider citing our work:"),Object(o.a)("p",null,"Buscombe, D., Wernette, P.A.,Fitzpatrick, S., Favela, J., Goldstein E.B., and Enwright, N.M. 2022, A 1.2 Billion Pixel Human-Labeled Dataset for Data-Driven Classification of Coastal Environments. Intended for Scientific Data"),Object(o.a)("p",null,"Wernette, P.A., Buscombe, D.D., Favela, J., Fitzpatrick, S., and Goldstein E., 2022, Coast Train--Labeled imagery for training and evaluation of data-driven models for image segmentation: U.S. Geological Survey data release, ",Object(o.a)("a",{parentName:"p",href:"https://doi.org/10.5066/P91NP87I"},"https://doi.org/10.5066/P91NP87I")))}d.isMDXComponent=!0}}]);